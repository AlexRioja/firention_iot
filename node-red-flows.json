[
    {
        "id": "05abb9a9ac283f46",
        "type": "tab",
        "label": "Firention-Substation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "62c5432a8c72dd60",
        "type": "tab",
        "label": "Firention-Drone",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f633a28.607134",
        "type": "tab",
        "label": "Firention-Online-Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "200dd1a51e2230a0",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9a8c21a505aee0d9",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "81e0b17971158201",
        "type": "ui_group",
        "name": "Control",
        "tab": "200dd1a51e2230a0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "71e294bae3a8896e",
        "type": "ui_group",
        "name": "Display",
        "tab": "a9b1490c852cd713",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6025ea3facbeacb4",
        "type": "mqtt-broker",
        "name": "Test_Mosca_MQTT_Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e71011f7d0559dde",
        "type": "mqtt-broker",
        "name": "broker_mobile",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a9b1490c852cd713",
        "type": "ui_tab",
        "name": "Mobile",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2e454d15.3b5982",
        "type": "mqtt-broker",
        "name": "Firention_temp_1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4dd92a6c.090374",
        "type": "mqtt-broker",
        "name": "Temp&Hum Plant #1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5b602b43.e7a354",
        "type": "mqtt-broker",
        "name": "Colour Plant #2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a5f83b44.73c758",
        "type": "mqtt-broker",
        "name": "Temp&Hum Plant #2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dba8fafa5936168a",
        "type": "mqtt-broker",
        "name": "Colour Plant #1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "87d0fdca2ec17a35",
        "type": "mqtt-broker",
        "name": "Temp&Hum Plant #1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ea98200ead15aa5d",
        "type": "tls-config",
        "name": "No server verification",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "f550bf33.cbef7",
        "type": "mqtt-broker",
        "name": "Screen Plant #2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2d93ea44.671e86",
        "type": "mqtt-broker",
        "name": "Screen Plant #1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "f5dab55.a277848",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f5dab55.a277848",
        "type": "tls-config",
        "name": "No server verification",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "722aa6b6086f8f9c",
        "type": "mqtt-broker",
        "name": "Firention_Temp_2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ed6eb688e8515f4",
        "type": "mqtt-broker",
        "name": "Firention_smoke_1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c16c430fb2222d65",
        "type": "mqtt-broker",
        "name": "Firention_Smoke_2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5fe2fb04741ee84b",
        "type": "mqtt-broker",
        "name": "Firention_Smoke_3",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4667ada2f5e5fb55",
        "type": "mqtt-broker",
        "name": "Firention_Smoke_4",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2f139a047f98e24f",
        "type": "mqtt-broker",
        "name": "Firention_Temp_3",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9e21ef4ebd18a4ac",
        "type": "mqtt-broker",
        "name": "Firention_Temp_4",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a2a3a03d9074c979",
        "type": "mqtt-broker",
        "name": "Firention_anem_1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4692d8c0f2a8c3a0",
        "type": "mqtt-broker",
        "name": "Firention_Anem_2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7c8d6038cc731f4b",
        "type": "mqtt-broker",
        "name": "Firention_Anem_3",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "682c385e7f5c6aee",
        "type": "mqtt-broker",
        "name": "Firention_Anem_4",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "015a5882c6c43bdc",
        "type": "mqtt-broker",
        "name": "Subscribe_Drone_1",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8555dc10cb798d5d",
        "type": "mqtt-broker",
        "name": "Subscribe Drone 2",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "65ac436e47b1c470",
        "type": "mqtt-broker",
        "name": "Subscribe_Drone_3",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0b556c1d8be311e9",
        "type": "mqtt-broker",
        "name": "Subscribe_Drone_4",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "70fb931.dfc146c",
        "type": "ui_group",
        "name": "MainGroup",
        "tab": "4bb34f67.69a87",
        "order": 1,
        "disp": false,
        "width": 10,
        "collapse": false
    },
    {
        "id": "4bb34f67.69a87",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "70046b97103583b9",
        "type": "mqtt-broker",
        "name": "OnlineWeather001",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d3efee6ee1f7bad8",
        "type": "mqtt-broker",
        "name": "OpenWeather002",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "24a5a91c7880c29f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "19f8895b76ee7c93",
        "type": "mqtt-broker",
        "name": "OnlineWeather004",
        "broker": "srv-iot.diatel.upm.es",
        "port": "8883",
        "tls": "ea98200ead15aa5d",
        "clientid": "",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "60e52c3011774b5b",
        "type": "inject",
        "z": "05abb9a9ac283f46",
        "name": "Ticker_5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "4db443a35f5ac6c8",
                "7ad9fe043f39e3a1",
                "5aa7abead391c51b",
                "c7256d1f1e5a4c70",
                "087f7f3c536c5353",
                "e43864a9f8a6c7eb",
                "e77e8e5e872fa5a2",
                "98dc59e14c3ff6a7"
            ]
        ]
    },
    {
        "id": "eec1a9f43c2ccf85",
        "type": "comment",
        "z": "05abb9a9ac283f46",
        "name": "Smoke sensors",
        "info": "",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "4db443a35f5ac6c8",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"smoke_1\";\nvar str2=\"isFire_1\";\nvar smoke=flow.get(str1);\nvar isFire=flow.get(str2);\n\nif(typeof smoke===\"undefined\"|| isNaN(smoke)){\n    //node.warn(\"Generating random values...\");\n    smoke=getRndInteger(0,10);\n}\nelse{\n    var fire_possibility=getRndInteger(0,100)>85 ? true :false;\n    var calm_possibility=getRndInteger(0,100)>75 ? true :false;\n    var increment=0;\n    if(isFire){\n        increment=getRndInteger(-10, 90)/10;\n        if(calm_possibility){ //we EXIT the fire\n            flow.set(str2, false);\n            increment=getRndInteger(-80, 10)/10;\n        }\n    }else{\n        increment=getRndInteger(-100, 10)/10;\n        if(fire_possibility){ //we ENTER the fire\n            flow.set(str2, true);\n            increment=getRndInteger(-10, 80)/10;\n        }\n    }\n    smoke=smoke+increment;\n    if(smoke < 0) smoke=0;\n    if(smoke > 100) smoke=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.smoke=smoke.toFixed(2);\nflow.set(str1,smoke);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "3791d118248e0d5b",
                "59e1fd1ef129ae42"
            ]
        ]
    },
    {
        "id": "3791d118248e0d5b",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8ed6eb688e8515f4",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "7ad9fe043f39e3a1",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"smoke_2\";\nvar str2=\"isFire_2\";\nvar smoke=flow.get(str1);\nvar isFire=flow.get(str2);\n\nif(typeof smoke===\"undefined\"|| isNaN(smoke)){\n    //node.warn(\"Generating random values...\");\n    smoke=getRndInteger(0,10);\n}\nelse{\n    var fire_possibility=getRndInteger(0,100)>97 ? true :false;\n    var calm_possibility=getRndInteger(0,100)>50 ? true :false;\n    var increment=0;\n    if(isFire){\n        increment=getRndInteger(-10, 90)/10;\n        if(calm_possibility){ //we EXIT the fire\n            flow.set(str2, false);\n            increment=getRndInteger(-80, 10)/10;\n        }\n    }else{\n        increment=getRndInteger(-100, 10)/10;\n        if(fire_possibility){ //we ENTER the fire\n            flow.set(str2, true);\n            increment=getRndInteger(-10, 80)/10;\n        }\n    }\n    smoke=smoke+increment;\n    if(smoke < 0) smoke=0;\n    if(smoke > 100) smoke=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.smoke=smoke.toFixed(2);\nflow.set(str1,smoke);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "79820807d8d09950"
            ]
        ]
    },
    {
        "id": "79820807d8d09950",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c16c430fb2222d65",
        "x": 1050,
        "y": 220,
        "wires": []
    },
    {
        "id": "52f809811353f11a",
        "type": "comment",
        "z": "05abb9a9ac283f46",
        "name": "Temp and hum sensors",
        "info": "",
        "x": 700,
        "y": 340,
        "wires": []
    },
    {
        "id": "5aa7abead391c51b",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"temp_1\";\nvar str2=\"hum_1\";\n\n\nvar temp=flow.get(str1);\nvar hum=flow.get(str2);\n\nif(typeof temp===\"undefined\"|| typeof hum===\"undefined\"\n        || isNaN(temp) || isNaN(hum)){\n    //node.warn(\"Generating random values...\");\n    temp=getRndInteger(-10, 100)/10;\n    hum=getRndInteger(0, 1000)/10;\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    temp=temp+getRndInteger(-9, 10)/10;\n    hum=hum+getRndInteger(-18, 10)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(temp < -30) temp=-30;\n    if(temp > 55) temp=55;\n    if(hum < 0) hum=0;\n    if(hum > 100) hum=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.temperature=temp.toFixed(2);\nmsg.payload.humidity=hum.toFixed(2);\nflow.set(str1,temp);\nflow.set(str2,hum);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "633183268900fe0b"
            ]
        ]
    },
    {
        "id": "633183268900fe0b",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2e454d15.3b5982",
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "c7256d1f1e5a4c70",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"temp_2\";\nvar str2=\"hum_2\";\n\n\nvar temp=flow.get(str1);\nvar hum=flow.get(str2);\n\nif(typeof temp===\"undefined\"|| typeof hum===\"undefined\"\n        || isNaN(temp) || isNaN(hum)){\n    //node.warn(\"Generating random values...\");\n    temp=getRndInteger(-500, 500)/10;\n    hum=getRndInteger(0, 1000)/10;\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    temp=temp+getRndInteger(-9, 10)/10;\n    hum=hum+getRndInteger(-18, 20)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(temp < -30) temp=-30;\n    if(temp > 55) temp=55;\n    if(hum < 0) hum=0;\n    if(hum > 100) hum=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.temperature=temp.toFixed(2);\nmsg.payload.humidity=hum.toFixed(2);\nflow.set(str1,temp);\nflow.set(str2,hum);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 420,
        "wires": [
            [
                "290c557698b0eb90"
            ]
        ]
    },
    {
        "id": "290c557698b0eb90",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "722aa6b6086f8f9c",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "087f7f3c536c5353",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"smoke_3\";\nvar str2=\"isFire_3\";\nvar smoke=flow.get(str1);\nvar isFire=flow.get(str2);\n\nif(typeof smoke===\"undefined\"|| isNaN(smoke)){\n    //node.warn(\"Generating random values...\");\n    smoke=getRndInteger(0,10);\n}\nelse{\n    var fire_possibility=getRndInteger(0,100)>99 ? true :false;\n    var calm_possibility=getRndInteger(0,100)>75 ? true :false;\n    var increment=0;\n    if(isFire){\n        increment=getRndInteger(-10, 90)/10;\n        if(calm_possibility){ //we EXIT the fire\n            flow.set(str2, false);\n            increment=getRndInteger(-80, 10)/10;\n        }\n    }else{\n        increment=getRndInteger(-100, 10)/10;\n        if(fire_possibility){ //we ENTER the fire\n            flow.set(str2, true);\n            increment=getRndInteger(-10, 80)/10;\n        }\n    }\n    smoke=smoke+increment;\n    if(smoke < 0) smoke=0;\n    if(smoke > 100) smoke=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.smoke=smoke.toFixed(2);\nflow.set(str1,smoke);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "bb6b85b43dcd5989"
            ]
        ]
    },
    {
        "id": "bb6b85b43dcd5989",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5fe2fb04741ee84b",
        "x": 1050,
        "y": 260,
        "wires": []
    },
    {
        "id": "e43864a9f8a6c7eb",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"smoke_4\";\nvar str2=\"isFire_4\";\nvar smoke=flow.get(str1);\nvar isFire=flow.get(str2);\n\nif(typeof smoke===\"undefined\"|| isNaN(smoke)){\n    //node.warn(\"Generating random values...\");\n    smoke=getRndInteger(0,10);\n}\nelse{\n    var fire_possibility=getRndInteger(0,100)>95 ? true :false;\n    var calm_possibility=getRndInteger(0,100)>75 ? true :false;\n    var increment=0;\n    if(isFire){\n        increment=getRndInteger(-10, 90)/10;\n        if(calm_possibility){ //we EXIT the fire\n            flow.set(str2, false);\n            increment=getRndInteger(-80, 10)/10;\n        }\n    }else{\n        increment=getRndInteger(-100, 10)/10;\n        if(fire_possibility){ //we ENTER the fire\n            flow.set(str2, true);\n            increment=getRndInteger(-10, 80)/10;\n        }\n    }\n    smoke=smoke+increment;\n    if(smoke < 0) smoke=0;\n    if(smoke > 100) smoke=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.smoke=smoke.toFixed(2);\nflow.set(str1,smoke);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "de45df324d1066e4"
            ]
        ]
    },
    {
        "id": "de45df324d1066e4",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4667ada2f5e5fb55",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "e77e8e5e872fa5a2",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"temp_3\";\nvar str2=\"hum_3\";\n\n\nvar temp=flow.get(str1);\nvar hum=flow.get(str2);\n\nif(typeof temp===\"undefined\"|| typeof hum===\"undefined\"\n        || isNaN(temp) || isNaN(hum)){\n    //node.warn(\"Generating random values...\");\n    temp=getRndInteger(-500, 500)/10;\n    hum=getRndInteger(0, 1000)/10;\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    temp=temp+getRndInteger(-9, 10)/10;\n    hum=hum+getRndInteger(-18, 20)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(temp < -30) temp=-30;\n    if(temp > 55) temp=55;\n    if(hum < 0) hum=0;\n    if(hum > 100) hum=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.temperature=temp.toFixed(2);\nmsg.payload.humidity=hum.toFixed(2);\nflow.set(str1,temp);\nflow.set(str2,hum);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            [
                "3212422060991066"
            ]
        ]
    },
    {
        "id": "3212422060991066",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2f139a047f98e24f",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "98dc59e14c3ff6a7",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"temp_4\";\nvar str2=\"hum_4\";\n\n\nvar temp=flow.get(str1);\nvar hum=flow.get(str2);\n\nif(typeof temp===\"undefined\"|| typeof hum===\"undefined\"\n        || isNaN(temp) || isNaN(hum)){\n    //node.warn(\"Generating random values...\");\n    temp=getRndInteger(-500, 500)/10;\n    hum=getRndInteger(0, 1000)/10;\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    temp=temp+getRndInteger(-9, 10)/10;\n    hum=hum+getRndInteger(-18, 20)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(temp < -30) temp=-30;\n    if(temp > 55) temp=55;\n    if(hum < 0) hum=0;\n    if(hum > 100) hum=100;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.temperature=temp.toFixed(2);\nmsg.payload.humidity=hum.toFixed(2);\nflow.set(str1,temp);\nflow.set(str2,hum);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            [
                "f2f4d4c278f1a303"
            ]
        ]
    },
    {
        "id": "f2f4d4c278f1a303",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9e21ef4ebd18a4ac",
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "5d0df2d82161f413",
        "type": "inject",
        "z": "05abb9a9ac283f46",
        "name": "Ticker_10s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "d13f69f89c024b51",
                "e1cd145bb7205458",
                "95ef3d26d31e8262",
                "f369218ca2d990cc"
            ]
        ]
    },
    {
        "id": "879d6f72ea59d41c",
        "type": "comment",
        "z": "05abb9a9ac283f46",
        "name": "Anemom sensors",
        "info": "",
        "x": 680,
        "y": 620,
        "wires": []
    },
    {
        "id": "d13f69f89c024b51",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"anem_1\";\nvar str2=\"wdir_1\";\n\n\nvar anem=flow.get(str1);\nvar wdir=flow.get(str2);\n\nif(typeof anem===\"undefined\"|| typeof wdir===\"undefined\"\n        || isNaN(anem) || isNaN(wdir)){\n    //node.warn(\"Generating random values...\");\n    anem=getRndInteger(0, 324)/10;\n    wdir=getRndInteger(0, 360);\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    anem=anem+getRndInteger(-27, 30)/10;\n    wdir=wdir+getRndInteger(-28, 30)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(anem < 0) anem=0;\n    if(anem > 32.4) anem=32.4;\n    if(wdir < 0) wdir=0;\n    if(wdir > 359) wdir=359;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.anem_data=anem.toFixed(1);\nmsg.payload.wind_direction=wdir.toFixed(0);\nflow.set(str1,anem);\nflow.set(str2,wdir);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 660,
        "wires": [
            [
                "2fe0c97d215dedc7"
            ]
        ]
    },
    {
        "id": "2fe0c97d215dedc7",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a2a3a03d9074c979",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "e1cd145bb7205458",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"anem_2\";\nvar str2=\"wdir_2\";\n\nvar anem=flow.get(str1);\nvar wdir=flow.get(str2);\n\nif(typeof anem===\"undefined\"|| typeof wdir===\"undefined\"\n        || isNaN(anem) || isNaN(wdir)){\n    //node.warn(\"Generating random values...\");\n    anem=getRndInteger(0, 324)/10;\n    wdir=getRndInteger(0, 360);\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    anem=anem+getRndInteger(-27, 30)/10;\n    wdir=wdir+getRndInteger(-28, 30)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(anem < 0) anem=0;\n    if(anem > 32.4) anem=32.4;\n    if(wdir < 0) wdir=0;\n    if(wdir > 359) wdir=359;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.anem_data=anem.toFixed(1);\nmsg.payload.wind_direction=wdir.toFixed(0);\nflow.set(str1,anem);\nflow.set(str2,wdir);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 700,
        "wires": [
            [
                "54b64430e3fd74db"
            ]
        ]
    },
    {
        "id": "54b64430e3fd74db",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4692d8c0f2a8c3a0",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "95ef3d26d31e8262",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"anem_3\";\nvar str2=\"wdir_3\";\n\nvar anem=flow.get(str1);\nvar wdir=flow.get(str2);\n\nif(typeof anem===\"undefined\"|| typeof wdir===\"undefined\"\n        || isNaN(anem) || isNaN(wdir)){\n    //node.warn(\"Generating random values...\");\n    anem=getRndInteger(0, 324)/10;\n    wdir=getRndInteger(0, 360);\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    anem=anem+getRndInteger(-27, 30)/10;\n    wdir=wdir+getRndInteger(-28, 30)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(anem < 0) anem=0;\n    if(anem > 32.4) anem=32.4;\n    if(wdir < 0) wdir=0;\n    if(wdir > 359) wdir=359;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.anem_data=anem.toFixed(1);\nmsg.payload.wind_direction=wdir.toFixed(0);\nflow.set(str1,anem);\nflow.set(str2,wdir);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 740,
        "wires": [
            [
                "50ee4c68cb0d8f1d"
            ]
        ]
    },
    {
        "id": "50ee4c68cb0d8f1d",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7c8d6038cc731f4b",
        "x": 1050,
        "y": 740,
        "wires": []
    },
    {
        "id": "f369218ca2d990cc",
        "type": "function",
        "z": "05abb9a9ac283f46",
        "name": "Generate_random_values",
        "func": "function getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nvar str1=\"anem_4\";\nvar str2=\"wdir_4\";\n\nvar anem=flow.get(str1);\nvar wdir=flow.get(str2);\n\nif(typeof anem===\"undefined\"|| typeof wdir===\"undefined\"\n        || isNaN(anem) || isNaN(wdir)){\n    //node.warn(\"Generating random values...\");\n    anem=getRndInteger(0, 324)/10;\n    wdir=getRndInteger(0, 360);\n}\nelse{\n    //node.warn(\"Adding latest values...\"+temp+\",\"+hum);\n    anem=anem+getRndInteger(-27, 30)/10;\n    wdir=wdir+getRndInteger(-28, 30)/10;\n    //node.warn(\"Result-->\"+temp+\",\"+hum);\n    if(anem < 0) anem=0;\n    if(anem > 32.4) anem=32.4;\n    if(wdir < 0) wdir=0;\n    if(wdir > 359) wdir=359;\n}\n\nmsg={};\nmsg.payload={};\nmsg.payload.anem_data=anem.toFixed(1);\nmsg.payload.wind_direction=wdir.toFixed(0);\nflow.set(str1,anem);\nflow.set(str2,wdir);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 780,
        "wires": [
            [
                "ab4dfcaef1e2f019"
            ]
        ]
    },
    {
        "id": "ab4dfcaef1e2f019",
        "type": "mqtt out",
        "z": "05abb9a9ac283f46",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "682c385e7f5c6aee",
        "x": 1050,
        "y": 780,
        "wires": []
    },
    {
        "id": "bd8da2acaecac5a5",
        "type": "config",
        "z": "05abb9a9ac283f46",
        "name": "",
        "properties": [
            {
                "p": "isFire_1",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "p": "isFire_2",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "p": "isFire_3",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "p": "isFire_4",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "active": true,
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "a83949232bfa7256",
        "type": "comment",
        "z": "62c5432a8c72dd60",
        "name": "Manage drone calls",
        "info": "",
        "x": 210,
        "y": 100,
        "wires": []
    },
    {
        "id": "91b1aece0e4a2eda",
        "type": "mqtt in",
        "z": "62c5432a8c72dd60",
        "name": "Subscribe to RPC drone 1",
        "topic": "v1/devices/me/rpc/request/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "015a5882c6c43bdc",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "4503961d1848c26d"
            ]
        ]
    },
    {
        "id": "4503961d1848c26d",
        "type": "json",
        "z": "62c5432a8c72dd60",
        "name": "String2JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "d9f21e78e1085884"
            ]
        ]
    },
    {
        "id": "d9f21e78e1085884",
        "type": "switch",
        "z": "62c5432a8c72dd60",
        "name": "Switch RPC command",
        "property": "payload.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "goPatrol",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "4ce0882bef360397",
                "0965eefc2e95a406"
            ]
        ]
    },
    {
        "id": "4ce0882bef360397",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "0965eefc2e95a406",
        "type": "pythonshell in",
        "z": "62c5432a8c72dd60",
        "name": "Execute Dron 1",
        "pyfile": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/drone001.py",
        "virtualenv": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/venv_for_nodered",
        "continuous": false,
        "stdInData": false,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "0ae16898f84f1d8a"
            ]
        ]
    },
    {
        "id": "0ae16898f84f1d8a",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 200,
        "wires": []
    },
    {
        "id": "5bf6e5ea9b2fb11c",
        "type": "mqtt in",
        "z": "62c5432a8c72dd60",
        "name": "Subscribe to RPC drone 2",
        "topic": "v1/devices/me/rpc/request/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "8555dc10cb798d5d",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "6d3bed08c2700a6c"
            ]
        ]
    },
    {
        "id": "6d3bed08c2700a6c",
        "type": "json",
        "z": "62c5432a8c72dd60",
        "name": "String2JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "5565497c6abf6484"
            ]
        ]
    },
    {
        "id": "5565497c6abf6484",
        "type": "switch",
        "z": "62c5432a8c72dd60",
        "name": "Switch RPC command",
        "property": "payload.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "goPatrol",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "4081b05f3fa77a5b",
                "d77ab52b6134e3dc"
            ]
        ]
    },
    {
        "id": "4081b05f3fa77a5b",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "d77ab52b6134e3dc",
        "type": "pythonshell in",
        "z": "62c5432a8c72dd60",
        "name": "Execute Dron 2",
        "pyfile": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/drone002.py",
        "virtualenv": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/venv_for_nodered",
        "continuous": false,
        "stdInData": false,
        "x": 920,
        "y": 300,
        "wires": [
            [
                "aa3479a1f95d8fbc"
            ]
        ]
    },
    {
        "id": "aa3479a1f95d8fbc",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "c2cf89c454fedf5d",
        "type": "mqtt in",
        "z": "62c5432a8c72dd60",
        "name": "Subscribe to RPC drone 3",
        "topic": "v1/devices/me/rpc/request/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "65ac436e47b1c470",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "b359cff52d7ab598"
            ]
        ]
    },
    {
        "id": "b359cff52d7ab598",
        "type": "json",
        "z": "62c5432a8c72dd60",
        "name": "String2JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "b12b90f27ff75a8f"
            ]
        ]
    },
    {
        "id": "b12b90f27ff75a8f",
        "type": "switch",
        "z": "62c5432a8c72dd60",
        "name": "Switch RPC command",
        "property": "payload.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "goPatrol",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "1ed504e9c266d533",
                "72b1aa9debfb3157"
            ]
        ]
    },
    {
        "id": "1ed504e9c266d533",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 380,
        "wires": []
    },
    {
        "id": "72b1aa9debfb3157",
        "type": "pythonshell in",
        "z": "62c5432a8c72dd60",
        "name": "Execute Dron 3",
        "pyfile": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/drone003.py",
        "virtualenv": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/venv_for_nodered",
        "continuous": false,
        "stdInData": false,
        "x": 920,
        "y": 420,
        "wires": [
            [
                "1d9a6817139beb62"
            ]
        ]
    },
    {
        "id": "1d9a6817139beb62",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 420,
        "wires": []
    },
    {
        "id": "1aa7198b04757e20",
        "type": "mqtt in",
        "z": "62c5432a8c72dd60",
        "name": "Subscribe to RPC drone 4",
        "topic": "v1/devices/me/rpc/request/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "0b556c1d8be311e9",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 540,
        "wires": [
            [
                "f91e3c58f56094fd"
            ]
        ]
    },
    {
        "id": "f91e3c58f56094fd",
        "type": "json",
        "z": "62c5432a8c72dd60",
        "name": "String2JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 540,
        "wires": [
            [
                "baf42d677f6f4374"
            ]
        ]
    },
    {
        "id": "baf42d677f6f4374",
        "type": "switch",
        "z": "62c5432a8c72dd60",
        "name": "Switch RPC command",
        "property": "payload.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "goPatrol",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 540,
        "wires": [
            [
                "7ea52c2396b72a59",
                "06c043777fe3d860"
            ]
        ]
    },
    {
        "id": "7ea52c2396b72a59",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 500,
        "wires": []
    },
    {
        "id": "06c043777fe3d860",
        "type": "pythonshell in",
        "z": "62c5432a8c72dd60",
        "name": "Execute Dron 4",
        "pyfile": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/drone004.py",
        "virtualenv": "/home/alejandro/Escritorio/Master_IoT/Architectures/Firention/firention_iot/venv_for_nodered",
        "continuous": false,
        "stdInData": false,
        "x": 920,
        "y": 540,
        "wires": [
            [
                "55c127b84cfc8fb1"
            ]
        ]
    },
    {
        "id": "55c127b84cfc8fb1",
        "type": "debug",
        "z": "62c5432a8c72dd60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 540,
        "wires": []
    },
    {
        "id": "d284ed2f.c15c8",
        "type": "comment",
        "z": "5f633a28.607134",
        "name": "OpenWeatherMap One Call API for current Weather",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "681b2b94.9f7a44",
        "type": "http request",
        "z": "5f633a28.607134",
        "name": "Get data from OpenWeatherApi",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "cba7359f18c00c77",
                "72c393343b7864c9"
            ]
        ]
    },
    {
        "id": "c72d96f0.204148",
        "type": "inject",
        "z": "5f633a28.607134",
        "name": "Trigger (10min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "79276db2.a2ce14",
                "3eef75e6e4cae3da",
                "084a17d9151655ef",
                "c41fc1610d6a00f4"
            ]
        ]
    },
    {
        "id": "79276db2.a2ce14",
        "type": "change",
        "z": "5f633a28.607134",
        "name": "Configure Request",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "40.705257",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "-3.894895",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "636b1ef85abd47e0429a3784a7b27c00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lang",
                "pt": "msg",
                "to": "en",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hour12",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lang",
                "pt": "flow",
                "to": "payload.lang",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exclude",
                "pt": "msg",
                "to": "minutely,hourly,daily,alerts",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "681b2b94.9f7a44"
            ]
        ]
    },
    {
        "id": "91666c53be7bbbd4",
        "type": "debug",
        "z": "5f633a28.607134",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 140,
        "wires": []
    },
    {
        "id": "cba7359f18c00c77",
        "type": "function",
        "z": "5f633a28.607134",
        "name": "",
        "func": "var newMsg={};\nnewMsg.payload = {};\n\nnewMsg.payload.temperature=msg.payload.current.temp;\nnewMsg.payload.humidity=msg.payload.current.humidity;\nnewMsg.payload.description=msg.payload.current.weather[0].description;\nnewMsg.payload.rain=false;\nif(msg.payload.current.weather[0].main!=\"Undefined\"){\n    if(msg.payload.current.weather[0].main==\"Rain\"){\n        newMsg.payload.rain=true;\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 180,
        "wires": [
            [
                "91666c53be7bbbd4",
                "14ed4b15125cf407"
            ]
        ]
    },
    {
        "id": "14ed4b15125cf407",
        "type": "mqtt out",
        "z": "5f633a28.607134",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "70046b97103583b9",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "76a0e8c21fa0fdec",
        "type": "http request",
        "z": "5f633a28.607134",
        "name": "Get data from OpenWeatherApi",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "68d4074c7ab1216c"
            ]
        ]
    },
    {
        "id": "3eef75e6e4cae3da",
        "type": "change",
        "z": "5f633a28.607134",
        "name": "Configure Request",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "40.782023",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "-3.883828",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "636b1ef85abd47e0429a3784a7b27c00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lang",
                "pt": "msg",
                "to": "en",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hour12",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lang",
                "pt": "flow",
                "to": "payload.lang",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exclude",
                "pt": "msg",
                "to": "minutely,hourly,daily,alerts",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "76a0e8c21fa0fdec"
            ]
        ]
    },
    {
        "id": "ed00c501cf9e8219",
        "type": "debug",
        "z": "5f633a28.607134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "68d4074c7ab1216c",
        "type": "function",
        "z": "5f633a28.607134",
        "name": "",
        "func": "var newMsg={};\nnewMsg.payload = {};\n\nnewMsg.payload.temperature=msg.payload.current.temp;\nnewMsg.payload.humidity=msg.payload.current.humidity;\nnewMsg.payload.description=msg.payload.current.weather[0].description;\nnewMsg.payload.rain=false;\nif(msg.payload.current.weather[0].main!=\"Undefined\"){\n    if(msg.payload.current.weather[0].main==\"Rain\"){\n        newMsg.payload.rain=true;\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 260,
        "wires": [
            [
                "ed00c501cf9e8219",
                "200ca01ab69bb687"
            ]
        ]
    },
    {
        "id": "200ca01ab69bb687",
        "type": "mqtt out",
        "z": "5f633a28.607134",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d3efee6ee1f7bad8",
        "x": 1050,
        "y": 260,
        "wires": []
    },
    {
        "id": "4b1c65ebd5441e9a",
        "type": "http request",
        "z": "5f633a28.607134",
        "name": "Get data from OpenWeatherApi",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "fb2f338346974204"
            ]
        ]
    },
    {
        "id": "084a17d9151655ef",
        "type": "change",
        "z": "5f633a28.607134",
        "name": "Configure Request",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "40.757112",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "-3.996739",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "636b1ef85abd47e0429a3784a7b27c00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lang",
                "pt": "msg",
                "to": "en",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hour12",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lang",
                "pt": "flow",
                "to": "payload.lang",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exclude",
                "pt": "msg",
                "to": "minutely,hourly,daily,alerts",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "4b1c65ebd5441e9a"
            ]
        ]
    },
    {
        "id": "a239c77a16c20f83",
        "type": "debug",
        "z": "5f633a28.607134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 300,
        "wires": []
    },
    {
        "id": "fb2f338346974204",
        "type": "function",
        "z": "5f633a28.607134",
        "name": "",
        "func": "var newMsg={};\nnewMsg.payload = {};\n\nnewMsg.payload.temperature=msg.payload.current.temp;\nnewMsg.payload.humidity=msg.payload.current.humidity;\nnewMsg.payload.description=msg.payload.current.weather[0].description;\nnewMsg.payload.rain=false;\nif(msg.payload.current.weather[0].main!=\"Undefined\"){\n    if(msg.payload.current.weather[0].main==\"Rain\"){\n        newMsg.payload.rain=true;\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 340,
        "wires": [
            [
                "a239c77a16c20f83",
                "f3ca95fb40738e77"
            ]
        ]
    },
    {
        "id": "f3ca95fb40738e77",
        "type": "mqtt out",
        "z": "5f633a28.607134",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "24a5a91c7880c29f",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "906e00a211e23e7e",
        "type": "http request",
        "z": "5f633a28.607134",
        "name": "Get data from OpenWeatherApi",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "159095e115a1ba40"
            ]
        ]
    },
    {
        "id": "c41fc1610d6a00f4",
        "type": "change",
        "z": "5f633a28.607134",
        "name": "Configure Request",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "40.8786700",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "-3.814208",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "636b1ef85abd47e0429a3784a7b27c00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lang",
                "pt": "msg",
                "to": "en",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hour12",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lang",
                "pt": "flow",
                "to": "payload.lang",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exclude",
                "pt": "msg",
                "to": "minutely,hourly,daily,alerts",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "906e00a211e23e7e"
            ]
        ]
    },
    {
        "id": "963db5774aa54121",
        "type": "debug",
        "z": "5f633a28.607134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 380,
        "wires": []
    },
    {
        "id": "159095e115a1ba40",
        "type": "function",
        "z": "5f633a28.607134",
        "name": "",
        "func": "var newMsg={};\nnewMsg.payload = {};\n\nnewMsg.payload.temperature=msg.payload.current.temp;\nnewMsg.payload.humidity=msg.payload.current.humidity;\nnewMsg.payload.description=msg.payload.current.weather[0].description;\nnewMsg.payload.rain=false;\nif(msg.payload.current.weather[0].main!=\"Undefined\"){\n    if(msg.payload.current.weather[0].main==\"Rain\"){\n        newMsg.payload.rain=true;\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "963db5774aa54121",
                "2073e90208f4c404"
            ]
        ]
    },
    {
        "id": "2073e90208f4c404",
        "type": "mqtt out",
        "z": "5f633a28.607134",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19f8895b76ee7c93",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "72c393343b7864c9",
        "type": "debug",
        "z": "5f633a28.607134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "59e1fd1ef129ae42",
        "type": "debug",
        "z": "05abb9a9ac283f46",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 120,
        "wires": []
    }
]